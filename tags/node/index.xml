<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>node on</title><link>https://laracarvalho.github.io/tags/node/</link><description>Recent content in node on</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><lastBuildDate>Wed, 08 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://laracarvalho.github.io/tags/node/index.xml" rel="self" type="application/rss+xml"/><item><title>Como usar error cause no Javascript e no Typescript</title><link>https://laracarvalho.github.io/post/error-cause/</link><pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate><guid>https://laracarvalho.github.io/post/error-cause/</guid><description>Como usar error cause no Javascript e no Typescript Tratar erros nunca é uma tarefa divertida, principalmente no ecossistema Javascript onde precisamos tratar vários tipos de erros; HTTP, Node, milhares de bibliotecas&amp;hellip;
Uma proposta relativamente recente me chamou bastante à atenção em relação ao tratamento de erros. Se trata da proposal-error-cause, já disponível nas versões mais atualizadas dos navegadores e do Node 16.9.0. De forma resumida, ela traz a razão, a causalidade de um erro específico.</description></item></channel></rss>